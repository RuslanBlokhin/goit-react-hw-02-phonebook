{"version":3,"sources":["components/contactList/contactListItem/ContactsListItem.module.css","components/container/Container.module.css","components/contactList/ContactsList.module.css","components/form/Form.js","components/filter/Filter.js","components/container/Container.js","components/contactList/contactListItem/ContactListItem.js","components/contactList/ContactList.js","components/App.js","index.js"],"names":["module","exports","Form","initialState","name","number","state","nameInputId","shortid","generate","numberInputId","handleInputChange","event","currentTarget","value","setState","handleSubmit","preventDefault","contact","id","props","onSubmit","reset","this","htmlFor","type","pattern","title","required","onChange","className","style","button","React","Component","PropsType","func","isRequired","Filter","Container","children","container","ContactListItem","onDeleteContact","contactItem","buttonDel","onClick","prototype","PropTypes","string","ContactsList","findContact","contactList","map","App","contacts","filter","handleChange","addContact","hasContacts","alert","find","toLocaleLowerCase","normalizedFilter","length","toLowerCase","includes","deleteContact","contactId","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e78a2722.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactsListItem_contactItem__2xUcv\",\"buttonDel\":\"ContactsListItem_buttonDel__3wiog\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__Z2Htr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactsList_contactList__4fU0m\"};","import React from \"react\";\r\nimport style from \"./Form\";\r\nimport PropsType from \"prop-types\";\r\nimport shortid from \"shortid\";\r\n\r\nclass Form extends React.Component {\r\n  initialState = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  nameInputId = shortid.generate();\r\n  numberInputId = shortid.generate();\r\n\r\n  handleInputChange = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const contact = {\r\n      id: shortid.generate(),\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    };\r\n\r\n    this.props.onSubmit(contact);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState(this.initialState);\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label htmlFor={this.nameInputId}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={name}\r\n            onChange={this.handleInputChange}\r\n            id={this.nameInputId}\r\n          />\r\n        </label>\r\n        <label htmlFor={this.numberInputId}>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={number}\r\n            onChange={this.handleInputChange}\r\n            id={this.numberInputId}\r\n          />\r\n        </label>\r\n        <button className={style.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nForm.PropsType = {\r\n  onSubmit: PropsType.func.isRequired,\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Filter extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <h3>Find contacts by name</h3>\r\n        <input\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={this.props.value}\r\n          onChange={this.props.onChange}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import style from \"./Container.module.css\";\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={style.container}>{children}</div>\r\n);\r\n\r\nexport default Container;\r\n","import PropTypes from \"prop-types\";\r\nimport style from \"./ContactsListItem.module.css\";\r\n\r\nconst ContactListItem = ({ id, name, number, onDeleteContact }) => {\r\n  return (\r\n    <li className={style.contactItem}>\r\n      {name}: {number}\r\n      <button\r\n        className={style.buttonDel}\r\n        type=\"submit\"\r\n        onClick={() => onDeleteContact(id)}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactListItem.prototype = {\r\n  id: PropTypes.number.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.number.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from \"react\";\r\nimport ContactListItem from \"./contactListItem/ContactListItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./ContactsList.module.css\";\r\n\r\nconst ContactsList = ({ findContact, onDeleteContact }) => {\r\n  return (\r\n    <ul className={style.contactList}>\r\n      {findContact().map(({ id, name, number }) => {\r\n        return (\r\n          <ContactListItem\r\n            key={id}\r\n            id={id}\r\n            name={name}\r\n            number={number}\r\n            onDeleteContact={onDeleteContact}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactsList.prototype = {\r\n  findContact: PropTypes.func.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\nexport default ContactsList;\r\n","import React from \"react\";\r\nimport Form from \"./form/Form.js\";\r\nimport Filter from \"./filter/Filter\";\r\nimport Container from \"./container/Container\";\r\nimport ContactsList from \"./contactList/ContactList\";\r\n// import { v4 as uuidv4 } from \"uuid\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    contacts: [\r\n      { id: \"id-1\", name: \"Endy Rhoads\", number: \"454-67-34\" },\r\n      { id: \"id-2\", name: \"Cliff Burton\", number: \"778-45-34\" },\r\n      { id: \"id-3\", name: \"Eddie Van Halen\", number: \"787-23-77\" },\r\n      { id: \"id-4\", name: \"Chuck Schuldiner\", number: \"366-45-20\" },\r\n    ],\r\n    filter: \"\",\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  addContact = (contact) => {\r\n    if (!this.hasContacts(contact.name)) {\r\n      this.setState(({ contacts }) => ({\r\n        contacts: [contact, ...contacts],\r\n      }));\r\n    } else {\r\n      alert(`${contact.name} is already in contacts`);\r\n    }\r\n  };\r\n\r\n  hasContacts = (name) => {\r\n    return this.state.contacts.find((contact) => {\r\n      return contact.name.toLocaleLowerCase() === name.toLocaleLowerCase();\r\n    });\r\n  };\r\n\r\n  findContact = () => {\r\n    const { filter, contacts } = this.state;\r\n    const normalizedFilter = filter.toLocaleLowerCase();\r\n\r\n    if (filter.length) {\r\n      return contacts.filter((contact) =>\r\n        contact.name.toLowerCase().includes(normalizedFilter)\r\n      );\r\n    } else {\r\n      return contacts;\r\n    }\r\n  };\r\n\r\n  deleteContact = (contactId) => {\r\n    this.setState((prevState) => ({\r\n      contacts: prevState.contacts.filter(\r\n        (contact) => contact.id !== contactId\r\n      ),\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <h1>PhoneBook</h1>\r\n        <Form onSubmit={this.addContact} />\r\n\r\n        <div>\r\n          <h2>Contacts</h2>\r\n          <Filter value={this.state.filter} onChange={this.handleChange} />\r\n          <ContactsList\r\n            findContact={this.findContact}\r\n            onDeleteContact={this.deleteContact}\r\n          />\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App.js\";\nimport \"modern-normalize/modern-normalize.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}